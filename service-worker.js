!function(){"use strict";const t=1615952299041,e=`cache${t}`,a=[].concat([]),s=new Set(a);self.addEventListener("install",(t=>{t.waitUntil(caches.open(e).then((t=>t.addAll(a))).then((()=>{self.skipWaiting()})))})),self.addEventListener("activate",(t=>{t.waitUntil(caches.keys().then((async t=>{for(const a of t)a!==e&&await caches.delete(a);self.clients.claim()})))})),self.addEventListener("fetch",(e=>{if("GET"!==e.request.method||e.request.headers.has("range"))return;const a=new URL(e.request.url),n=a.protocol.startsWith("http"),c=a.hostname===self.location.hostname&&a.port!==self.location.port,o=a.host===self.location.host&&s.has(a.pathname),i="only-if-cached"===e.request.cache&&!o;!n||c||i||e.respondWith((async()=>o&&await caches.match(e.request)||async function(e){const a=await caches.open(`offline${t}`);try{const t=await fetch(e);return a.put(e,t.clone()),t}catch(t){const s=await a.match(e);if(s)return s;throw t}}(e.request))())}))}();
